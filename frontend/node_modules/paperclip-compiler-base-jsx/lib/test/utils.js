"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.compileModules = void 0;
var paperclip_1 = require("paperclip");
var babel = require("@babel/core");
var paperclip_interim_1 = require("paperclip-interim");
var paperclip_utils_1 = require("paperclip-utils");
var compileModules = function (compile, builtin, extensionName) {
    if (extensionName === void 0) { extensionName = "js"; }
    return function (graph, config) { return __awaiter(void 0, void 0, void 0, function () {
        var engine, intermCompiler, modules, _loop_1, path;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, (0, paperclip_1.createEngineDelegate)({
                        io: {
                            readFile: function (uri) { return graph[uri]; },
                            fileExists: function (uri) { return Boolean(graph[uri]); },
                            resolveFile: function (from, to) {
                                return to;
                            }
                        }
                    })];
                case 1:
                    engine = _a.sent();
                    intermCompiler = new paperclip_interim_1.InterimCompiler(engine, {
                        config: config,
                        cwd: "/",
                        targetOptions: {
                            outDir: null
                        },
                        io: {
                            readFile: function (filePath) {
                                return Buffer.from(graph[filePath]);
                            },
                            getFileSize: function () {
                                return 0;
                            }
                        }
                    });
                    modules = {};
                    _loop_1 = function (path) {
                        if (!(0, paperclip_utils_1.isPaperclipFile)(path)) {
                            modules[path] = function () { return graph[path]; };
                            return "continue";
                        }
                        var es6 = compile({
                            module: intermCompiler.parseFile(path),
                            fileUrl: path,
                            targetOptions: config.compilerOptions || {},
                            config: config,
                            includes: []
                        })["." + extensionName];
                        var es5 = babel.transformSync(es6, { presets: ["@babel/preset-env"] });
                        var module_1 = new Function("require", "\n      const module = {\n        exports: {}\n      };\n\n      const exports = module.exports;\n\n      ".concat(es5.code, "\n\n      return exports;\n    "));
                        var executed = {};
                        var wrapper = function () {
                            return module_1(function (path) {
                                var mod = modules[path] || modules[path.substr(1)];
                                var ex = executed[path] || (executed[path] = mod && mod());
                                return builtin[path] || ex;
                            });
                        };
                        modules[path] = wrapper;
                    };
                    for (path in graph) {
                        _loop_1(path);
                    }
                    return [2 /*return*/, modules];
            }
        });
    }); };
};
exports.compileModules = compileModules;
