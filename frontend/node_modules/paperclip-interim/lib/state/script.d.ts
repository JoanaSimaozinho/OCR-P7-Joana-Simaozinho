import { StringRange } from "paperclip-utils";
import { InterimElement } from "./html";
export declare enum InterimScriptExpressionKind {
    Reference = "Reference",
    Conjunction = "Conjunction",
    Number = "Number",
    Boolean = "Boolean",
    Group = "Group",
    Not = "Not",
    String = "String",
    Element = "ScriptElement"
}
declare type BaseInterimScriptExpression<TKind extends InterimScriptExpressionKind> = {
    kind: TKind;
    range: StringRange;
};
export declare enum InterimConjunctionOperator {
    Or = "Or",
    And = "And"
}
export declare type InterimConjunction = {
    operator: InterimConjunctionOperator;
    left: InterimScriptExpression;
    right: InterimScriptExpression;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Conjunction>;
export declare type InterimReference = {
    name?: string;
    optional?: boolean;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Reference>;
export declare type InterimNumber = {
    value: string;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Number>;
export declare type InterimString = {
    value: string;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.String>;
export declare type InterimGroup = {
    inner: InterimScriptExpression;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Group>;
export declare type InterimBoolean = {
    value: boolean;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Boolean>;
export declare type InterimNot = {
    expression: InterimScriptExpression;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Not>;
export declare type InterimScriptEelement = {
    kind: InterimScriptExpressionKind;
    element: InterimElement;
} & BaseInterimScriptExpression<InterimScriptExpressionKind.Element>;
export declare type InterimScriptExpression = InterimNot | InterimString | InterimGroup | InterimNumber | InterimBoolean | InterimReference | InterimScriptEelement | InterimConjunction;
export {};
