import { ExprTextSource } from "../base/virt";
export declare enum VirtScriptObjectKind {
    Object = "Object",
    Array = "Array",
    Boolean = "Boolean",
    Number = "Number",
    Str = "Str"
}
declare type BaseVirtScriptObject<TKind extends VirtScriptObjectKind> = {
    kind: TKind;
};
export declare type VirtScriptObject = {
    values: Record<string, VirtJsValue>;
    source: ExprTextSource;
} & BaseVirtScriptObject<VirtScriptObjectKind.Object>;
export declare type VirtScriptArray = {
    values: VirtJsValue[];
} & BaseVirtScriptObject<VirtScriptObjectKind.Array>;
export declare type VirtScriptNumber = {
    value: number;
} & BaseVirtScriptObject<VirtScriptObjectKind.Number>;
export declare type VirtScriptBoolean = {
    value: boolean;
} & BaseVirtScriptObject<VirtScriptObjectKind.Boolean>;
export declare type VirtScriptString = {
    value: string;
} & BaseVirtScriptObject<VirtScriptObjectKind.Str>;
export declare type VirtJsValue = VirtScriptObject | VirtScriptArray | VirtScriptNumber | VirtScriptBoolean | VirtScriptString;
export declare const computeVirtScriptObject: (obj: VirtScriptObject) => {};
export declare const toVirtScriptValue: any;
export declare const computeVirtScriptValue: any;
export {};
