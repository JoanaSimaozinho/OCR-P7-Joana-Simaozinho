"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.traverseJSExpression = exports.ScriptConjunctionOperatorKind = exports.ScriptExpressionKind = void 0;
var ast_1 = require("../html/ast");
var ScriptExpressionKind;
(function (ScriptExpressionKind) {
    ScriptExpressionKind["Node"] = "Node";
    ScriptExpressionKind["Reference"] = "Reference";
    ScriptExpressionKind["Array"] = "Array";
    ScriptExpressionKind["Object"] = "Object";
    ScriptExpressionKind["String"] = "String";
    ScriptExpressionKind["Number"] = "Number";
    ScriptExpressionKind["Boolean"] = "Boolean";
    ScriptExpressionKind["Conjunction"] = "Conjunction";
    ScriptExpressionKind["Not"] = "Not";
    ScriptExpressionKind["Group"] = "Group";
})(ScriptExpressionKind = exports.ScriptExpressionKind || (exports.ScriptExpressionKind = {}));
var ScriptConjunctionOperatorKind;
(function (ScriptConjunctionOperatorKind) {
    ScriptConjunctionOperatorKind["And"] = "And";
    ScriptConjunctionOperatorKind["Or"] = "Or";
})(ScriptConjunctionOperatorKind = exports.ScriptConjunctionOperatorKind || (exports.ScriptConjunctionOperatorKind = {}));
var traverseJSExpression = function (expr, each) {
    if (expr.scriptKind === ScriptExpressionKind.Conjunction) {
        return ((0, exports.traverseJSExpression)(expr.left, each) &&
            (0, exports.traverseJSExpression)(expr.right, each));
    }
    else if (expr.scriptKind === ScriptExpressionKind.Array) {
        for (var _i = 0, _a = expr.values; _i < _a.length; _i++) {
            var value = _a[_i];
            if ((0, exports.traverseJSExpression)(value, each) === false) {
                return false;
            }
        }
    }
    else if (expr.scriptKind === ScriptExpressionKind.Node) {
        return (0, ast_1.traverseExpression)(expr, each);
    }
    return true;
};
exports.traverseJSExpression = traverseJSExpression;
