import { EngineDelegateEvent } from "./events";
import { DependencyContent } from "./graph";
import { LoadedData } from "../html/virt";
export declare enum BasicPaperclipActionType {
    AST_REQUESTED = "AST_REQUESTED",
    LOADED_DATA_REQUESTED = "LOADED_DATA_REQUESTED",
    LOADED_DATA_EMITTED = "LOADED_DATA_EMITTED",
    AST_EMITTED = "AST_EMITTED",
    ENGINE_DELEGATE_CHANGED = "ENGINE_DELEGATE_CHANGED",
    PREVIEW_CONTENT = "PREVIEW_CONTENT"
}
export declare const actionCreator: <TAction extends BaseAction<any, any>>(type: TAction["type"]) => (payload: TAction["payload"]) => {
    type: TAction["type"];
    payload: TAction["payload"];
};
declare type BaseAction<TType = BasicPaperclipActionType, TPayload = undefined> = {
    type: TType;
    payload: TPayload;
};
export declare type AstRequested = BaseAction<BasicPaperclipActionType.AST_REQUESTED, {
    uri: string;
}>;
export declare type LoadedDataRequested = BaseAction<BasicPaperclipActionType.LOADED_DATA_REQUESTED, {
    uri: string;
}>;
export declare type LoadedDataEmitted = BaseAction<BasicPaperclipActionType.LOADED_DATA_EMITTED, {
    uri: string;
    data: LoadedData;
    imports: Record<string, LoadedData>;
    ast: DependencyContent;
}>;
export declare type PreviewContent = BaseAction<BasicPaperclipActionType.PREVIEW_CONTENT, {
    uri: string;
    value: string;
}>;
export declare type AstEmitted = BaseAction<BasicPaperclipActionType.AST_EMITTED, {
    uri: string;
    content: DependencyContent;
}>;
export declare type EngineDelegateChanged = BaseAction<BasicPaperclipActionType.ENGINE_DELEGATE_CHANGED, EngineDelegateEvent>;
export declare const astEmitted: (payload: {
    uri: string;
    content: DependencyContent;
}) => {
    type: BasicPaperclipActionType.AST_EMITTED;
    payload: {
        uri: string;
        content: DependencyContent;
    };
};
export declare const astRequested: (payload: {
    uri: string;
}) => {
    type: BasicPaperclipActionType.AST_REQUESTED;
    payload: {
        uri: string;
    };
};
export declare const loadedDataRequested: (payload: {
    uri: string;
}) => {
    type: BasicPaperclipActionType.LOADED_DATA_REQUESTED;
    payload: {
        uri: string;
    };
};
export declare const loadedDataEmitted: (payload: {
    uri: string;
    data: LoadedData;
    imports: Record<string, LoadedData>;
    ast: DependencyContent;
}) => {
    type: BasicPaperclipActionType.LOADED_DATA_EMITTED;
    payload: {
        uri: string;
        data: LoadedData;
        imports: Record<string, LoadedData>;
        ast: DependencyContent;
    };
};
export declare const previewContent: (payload: {
    uri: string;
    value: string;
}) => {
    type: BasicPaperclipActionType.PREVIEW_CONTENT;
    payload: {
        uri: string;
        value: string;
    };
};
export declare const engineDelegateChanged: (payload: EngineDelegateEvent) => {
    type: BasicPaperclipActionType.ENGINE_DELEGATE_CHANGED;
    payload: EngineDelegateEvent;
};
export declare type BasicPaperclipAction = AstEmitted | AstRequested | LoadedDataRequested | LoadedDataEmitted | EngineDelegateChanged | PreviewContent;
export {};
