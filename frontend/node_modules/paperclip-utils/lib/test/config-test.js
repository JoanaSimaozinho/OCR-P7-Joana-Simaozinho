"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var config_1 = require("../core/config");
var chai_1 = require("chai");
describe(__filename + "#", function () {
    describe("Compiler options", function () {
        it("can be built from non-array config", function () {
            var options = (0, config_1.buildCompilerOptions)({
                srcDir: "./src",
                compilerOptions: {
                    outDir: "a"
                }
            });
            (0, chai_1.expect)(options).to.eql([{ outDir: "a" }]);
        });
        it("can be built from an array config", function () {
            var options = (0, config_1.buildCompilerOptions)({
                srcDir: "./src",
                compilerOptions: [
                    {
                        outDir: "a"
                    },
                    {
                        outDir: "b"
                    }
                ]
            });
            (0, chai_1.expect)(options).to.eql([{ outDir: "a" }, { outDir: "b" }]);
        });
        it("can be built from an array ", function () {
            var options = (0, config_1.buildCompilerOptions)({
                srcDir: "./src",
                compilerOptions: [
                    {
                        outDir: "b"
                    },
                    {
                        outDir: "c"
                    }
                ]
            });
            (0, chai_1.expect)(options).to.eql([{ outDir: "b" }, { outDir: "c" }]);
        });
        it("generates compiler options anyways if not specified ", function () {
            var options = (0, config_1.buildCompilerOptions)({
                srcDir: "./src"
            });
            (0, chai_1.expect)(options).to.eql([{ outDir: "./src" }]);
        });
        it("sets outdir as srcDir is not specified", function () {
            var options = (0, config_1.buildCompilerOptions)({
                srcDir: "./src",
                compilerOptions: {}
            });
            (0, chai_1.expect)(options).to.eql([{ outDir: "./src" }]);
        });
    });
});
