"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var chai_1 = require("chai");
describe(__filename + "#", function () {
    var cases = [
        [
            "Can inspect a simple node",
            {
                "/entry.pc": "<div>\n          <style>\n            color: red;\n          </style>\n        </div>"
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Sets inline style at a higher priority than document class",
            {
                "/entry.pc": "\n          <style>\n            .item {\n              color: blue;\n            }\n          </style>\n          <div class=\"item\">\n            <style>\n              color: red;\n            </style>\n          </div>\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._376a18c0._376a18c0",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._376a18c0",
                                    scope: {
                                        kind: "Element",
                                        id: "376a18c0"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._376a18c0",
                                    scope: {
                                        kind: "Element",
                                        id: "376a18c0"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "376a18c0",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-6-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    },
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_item",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "item",
                                    value: "._80f4925f_item",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-2",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "blue",
                                active: false
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Ignores :hover selector",
            {
                "/entry.pc": "\n          <div class:hover=\"hover\">\n            <style>\n              color: red;\n              &:hover {\n                color: red;\n              }\n            </style>\n          </div>\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-4-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Combo has different specificity than class",
            {
                "/entry.pc": "\n          <style>\n            .a {\n              color: red;\n            }\n            .a.b {\n              color: blue;\n            }\n          </style>\n          <div class=\"a b\" />\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._80f4925f_a._80f4925f_b._80f4925f",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: "a",
                                    value: "._80f4925f_a",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: "b",
                                    value: "._80f4925f_b",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._80f4925f",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-5",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-4",
                                name: "color",
                                value: "blue",
                                active: true
                            }
                        ],
                        specificity: 6
                    },
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_a",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "a",
                                    value: "._80f4925f_a",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-2",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "red",
                                active: false
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Can inspect global styles",
            {
                "/entry.pc": "\n          <style>\n            :global(.a) {\n              color: red;\n            }\n          </style>\n          <div class=\"a b\" />\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: ".a",
                        selectorInfo: {
                            kind: "Class",
                            name: "a",
                            value: ".a",
                            scope: null
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-3",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-2",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 2
                    }
                ]
            }
        ],
        [
            "Can inspect a nested media query",
            {
                "/entry.pc": "\n          <style>\n            \n            @media (min-width: 1024px) {\n              @media (min-width: 1280px) {\n                .a {\n                  color: blue;\n                }\n              }\n            }\n          </style>\n          <div class=\"a\">\n          </div>\n        "
            },
            1300,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_a",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "a",
                                    value: "._80f4925f_a",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-2",
                        sourceUri: "/entry.pc",
                        media: {
                            conditionText: "(min-width: 1280px)",
                            active: false
                        },
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "blue",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Can inspect imported styles",
            {
                "/entry.pc": "\n          <import src=\"/test.css\" inject-styles />\n          <div class=\"a\" />\n        ",
                "/test.css": "\n          .a {\n            color: red;\n          }\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "[class]._pub-b8a55827_a",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "a",
                                    value: "._pub-b8a55827_a",
                                    scope: {
                                        kind: "Document",
                                        id: "b8a55827"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "b8a55827-2",
                        sourceUri: "/test.css",
                        media: null,
                        declarations: [
                            {
                                sourceId: "b8a55827-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Inspect captures escaped selectors",
            {
                "/entry.pc": "\n          <style>\n            .a\\:b\\:c {\n              color: red;\n            }\n          </style>\n          <div class=\"a:b:c\">\n          </div>\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_a\\:b\\:c",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "a\\:b\\:c",
                                    value: "._80f4925f_a\\:b\\:c",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-2",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "inherits font-family from parent",
            {
                "/entry.pc": "\n          <div>\n            <style>\n              font-family: sans-serif;\n            </style>\n            <div />\n          </div>\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: true,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "font-family",
                                value: "sans-serif",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "When inherit is declared, then prop is inherited from parent",
            {
                "/entry.pc": "\n          <div>\n            <style>\n              background: blue;\n            </style>\n            <div>\n              <style>\n                background: inherit;\n              </style>\n            </div>\n          </div>\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._e9795a6f._e9795a6f",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._e9795a6f",
                                    scope: {
                                        kind: "Element",
                                        id: "e9795a6f"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._e9795a6f",
                                    scope: {
                                        kind: "Element",
                                        id: "e9795a6f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "e9795a6f",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-3-1",
                                name: "background",
                                value: "inherit",
                                active: true
                            }
                        ],
                        specificity: 4
                    },
                    {
                        inherited: true,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "background",
                                value: "blue",
                                active: false
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Skips duplicated inherited styles",
            {
                "/entry.pc": "\n          <div>\n            <style>\n              font-family: sans-serif;\n            </style>\n            <div>\n              <div />\n            </div>\n          </div>\n        "
            },
            100,
            [0, 0, 0],
            {
                styleRules: [
                    {
                        inherited: true,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "font-family",
                                value: "sans-serif",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "&&& and proceeding :within gets declaration value overrides correct",
            {
                "/entry.pc": "\n          <div class=\"test\">\n            <div>\n              <style>\n                &&& {\n                  ab: red;\n                }\n                &:within(.test) {\n                  ab: blue;\n                }\n              </style>\n            </div>\n          </div>\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._9e7e6af9._9e7e6af9._9e7e6af9._9e7e6af9._9e7e6af9._9e7e6af9",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9e7e6af9",
                                    scope: {
                                        kind: "Element",
                                        id: "9e7e6af9"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-4-5",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-4-4",
                                name: "ab",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 12
                    },
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_test ._9e7e6af9._9e7e6af9",
                        selectorInfo: {
                            kind: "Descendent",
                            left: {
                                kind: "Combo",
                                selectors: [
                                    {
                                        kind: "Attribute",
                                        value: "[class]"
                                    },
                                    {
                                        kind: "Class",
                                        name: "test",
                                        value: "._80f4925f_test",
                                        scope: {
                                            kind: "Document",
                                            id: "80f4925f"
                                        }
                                    }
                                ]
                            },
                            right: {
                                kind: "Combo",
                                selectors: [
                                    {
                                        kind: "Class",
                                        name: null,
                                        value: "._9e7e6af9",
                                        scope: {
                                            kind: "Element",
                                            id: "9e7e6af9"
                                        }
                                    },
                                    {
                                        kind: "Class",
                                        name: null,
                                        value: "._9e7e6af9",
                                        scope: {
                                            kind: "Element",
                                            id: "9e7e6af9"
                                        }
                                    }
                                ]
                            }
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-4-9",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-4-8",
                                name: "ab",
                                value: "blue",
                                active: false
                            }
                        ],
                        specificity: 8
                    }
                ]
            }
        ],
        [
            "Can inspect styles in slots",
            {
                "/entry.pc": "\n          <div component as=\"Test\">\n            {show && <div>\n              <style>\n                color: red;\n              </style>\n            </div>}\n          </div>\n\n          <Test show />\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._3024ebf3._3024ebf3",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._3024ebf3",
                                    scope: {
                                        kind: "Element",
                                        id: "3024ebf3"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._3024ebf3",
                                    scope: {
                                        kind: "Element",
                                        id: "3024ebf3"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "3024ebf3",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "0-00-2-1-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Ignores :focus",
            {
                "/entry.pc": "\n          <div>\n            <style>\n              color: red;\n              &:focus {\n                color: blue;\n              }\n            </style>\n          </div>\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "parent selectors with css variables are inherited",
            {
                "/entry.pc": "\n          <div>\n            <style>\n              --color: red;\n            </style>\n            <div />\n          </div>\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: true,
                        selectorText: "._406d2856._406d2856",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._406d2856",
                                    scope: {
                                        kind: "Element",
                                        id: "406d2856"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "406d2856",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-1",
                                name: "--color",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "classes have priority over :root",
            {
                "/entry.pc": "\n          <style>\n            :global(:root) {\n              --color: red;\n            }\n            :global(.theme) {\n              --color: blue;\n            }\n          </style>\n          <div class=\"theme\">\n            <div>\n              <style>\n                color: var(--color);\n              </style>\n            </div>\n          </div>\n        "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._9fbc00ce._9fbc00ce",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9fbc00ce",
                                    scope: {
                                        kind: "Element",
                                        id: "9fbc00ce"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9fbc00ce",
                                    scope: {
                                        kind: "Element",
                                        id: "9fbc00ce"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "9fbc00ce",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-6-1",
                                name: "color",
                                value: "var(--color)",
                                active: true
                            }
                        ],
                        specificity: 4
                    },
                    {
                        inherited: true,
                        selectorText: ".theme",
                        selectorInfo: {
                            kind: "Class",
                            name: "theme",
                            value: ".theme",
                            scope: null
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-6",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-5",
                                name: "--color",
                                value: "blue",
                                active: true
                            }
                        ],
                        specificity: 2
                    },
                    {
                        inherited: true,
                        selectorText: ":root",
                        selectorInfo: {
                            kind: "PseudoElement",
                            value: ":root"
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-3",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-1-2",
                                name: "--color",
                                value: "red",
                                active: false
                            }
                        ],
                        specificity: 1
                    }
                ]
            }
        ],
        [
            "Inspects styles for injected classes",
            {
                "/entry.pc": "\n          <import src=\"/atoms.pc\" inject-styles />\n          <div class=\"text-small\">\n            <div>\n              <style>\n                color: var(--color);\n              </style>\n            </div>\n          </div>\n        ",
                "/atoms.pc": "\n        <style>\n          @export {\n            .text-small {\n              font-size: 24px;\n            }\n          }\n        </style>\n      "
            },
            100,
            [0, 0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "._9fbc00ce._9fbc00ce",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9fbc00ce",
                                    scope: {
                                        kind: "Element",
                                        id: "9fbc00ce"
                                    }
                                },
                                {
                                    kind: "Class",
                                    name: null,
                                    value: "._9fbc00ce",
                                    scope: {
                                        kind: "Element",
                                        id: "9fbc00ce"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "9fbc00ce",
                        sourceUri: "/entry.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "80f4925f-8-1",
                                name: "color",
                                value: "var(--color)",
                                active: true
                            }
                        ],
                        specificity: 4
                    },
                    {
                        inherited: true,
                        selectorText: "[class]._pub-230c4d4a_text-small",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "text-small",
                                    value: "._pub-230c4d4a_text-small",
                                    scope: {
                                        kind: "Document",
                                        id: "230c4d4a"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "230c4d4a-1-2",
                        sourceUri: "/atoms.pc",
                        media: null,
                        declarations: [
                            {
                                sourceId: "230c4d4a-1-1",
                                name: "font-size",
                                value: "24px",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Returns correct sourceId for included media rule",
            {
                "/entry.pc": "\n          <style>\n            @mixin mobile {\n              @media screen and (max-width: 500px) {\n                @content;\n              }\n            }\n            .item {\n              @include mobile {\n                background: red;\n              }\n            }\n          </style>\n          <div class=\"item\" />\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_item",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "item",
                                    value: "._80f4925f_item",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-8",
                        sourceUri: "/entry.pc",
                        media: {
                            conditionText: "screen and (max-width: 500px)",
                            active: true
                        },
                        declarations: [
                            {
                                sourceId: "80f4925f-1-7",
                                name: "background",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ],
        [
            "Uses annotation information for screen size",
            {
                "/entry.pc": "\n          <style>\n            @mixin mobile {\n              @media screen and (max-width: 500px) {\n                @content;\n              }\n            }\n            .item {\n              @include mobile {\n                background: red;\n              }\n            }\n          </style>\n          \n          <!-- \n            @frame { width: 600 }\n          -->\n          <div class=\"item\" />\n        "
            },
            100,
            [0],
            {
                styleRules: [
                    {
                        inherited: false,
                        selectorText: "[class]._80f4925f_item",
                        selectorInfo: {
                            kind: "Combo",
                            selectors: [
                                {
                                    kind: "Attribute",
                                    value: "[class]"
                                },
                                {
                                    kind: "Class",
                                    name: "item",
                                    value: "._80f4925f_item",
                                    scope: {
                                        kind: "Document",
                                        id: "80f4925f"
                                    }
                                }
                            ]
                        },
                        pseudoElementName: null,
                        sourceId: "80f4925f-1-8",
                        sourceUri: "/entry.pc",
                        media: {
                            conditionText: "screen and (max-width: 500px)",
                            active: false
                        },
                        declarations: [
                            {
                                sourceId: "80f4925f-1-7",
                                name: "background",
                                value: "red",
                                active: true
                            }
                        ],
                        specificity: 4
                    }
                ]
            }
        ]
    ];
    var _loop_1 = function (title, graph, screenWidth, path, result) {
        it(title, function () { return __awaiter(void 0, void 0, void 0, function () {
            var engine, inspection;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, (0, utils_1.createMockEngine)(graph)];
                    case 1:
                        engine = _a.sent();
                        return [4 /*yield*/, engine.open("/entry.pc")];
                    case 2:
                        _a.sent();
                        inspection = engine.inspectNodeStyles({ path: path, uri: "/entry.pc" }, screenWidth);
                        (0, chai_1.expect)(inspection).to.eql(result);
                        return [2 /*return*/];
                }
            });
        }); });
    };
    for (var _i = 0, cases_1 = cases; _i < cases_1.length; _i++) {
        var _a = cases_1[_i], title = _a[0], graph = _a[1], screenWidth = _a[2], path = _a[3], result = _a[4];
        _loop_1(title, graph, screenWidth, path, result);
    }
});
