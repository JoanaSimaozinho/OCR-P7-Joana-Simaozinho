"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var path = require("path");
var url = require("url");
var chai_1 = require("chai");
var node_1 = require("../../node");
var utils_1 = require("../utils");
describe(__filename + "#", function () {
    it("Can load an entry that has an import", function () { return __awaiter(void 0, void 0, void 0, function () {
        var e, result, _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    e = (0, node_1.createEngineDelegate)();
                    _a = utils_1.stringifyLoadResult;
                    return [4 /*yield*/, e.open(url
                            .pathToFileURL(path.join(utils_1.TEST_FIXTURE_SRC_DIRECTORY, "good-import.pc"))
                            .toString())];
                case 1:
                    result = _a.apply(void 0, [_b.sent()]);
                    (0, chai_1.expect)(result.replace(/ class=".*?"/g, "")).to.eql("<style></style><div> I'm a secret! </div>");
                    return [2 /*return*/];
            }
        });
    }); });
    it("Won't load module src where the casing is incorrect", function () { return __awaiter(void 0, void 0, void 0, function () {
        var e, err;
        return __generator(this, function (_a) {
            e = (0, node_1.createEngineDelegate)();
            try {
                e.open(url
                    .pathToFileURL(path.join(utils_1.TEST_FIXTURE_SRC_DIRECTORY, "bad-import.pc"))
                    .toString());
            }
            catch (e) {
                err = e;
            }
            (0, chai_1.expect)(err.errorKind).to.eql("Graph");
            (0, chai_1.expect)(err.info.message).to.eql("import not found");
            return [2 /*return*/];
        });
    }); });
    it("Displays an error for 404 CSS url", function () { return __awaiter(void 0, void 0, void 0, function () {
        var e, err, e_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    e = (0, node_1.createEngineDelegate)();
                    _a.label = 1;
                case 1:
                    _a.trys.push([1, 3, , 4]);
                    return [4 /*yield*/, e.open(url
                            .pathToFileURL(path.join(utils_1.TEST_FIXTURE_SRC_DIRECTORY, "bad-css-url.pc"))
                            .toString())];
                case 2:
                    _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    e_1 = _a.sent();
                    err = e_1;
                    return [3 /*break*/, 4];
                case 4:
                    (0, chai_1.expect)(err).not.to.eq(null);
                    (0, chai_1.expect)(err.errorKind).to.eql("Runtime");
                    (0, chai_1.expect)(err.message).to.contain("Unable to resolve file: /not/found.png");
                    return [2 /*return*/];
            }
        });
    }); });
    it("can resolve a pc file from a a module", function () { return __awaiter(void 0, void 0, void 0, function () {
        var e, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    e = (0, node_1.createEngineDelegate)();
                    return [4 /*yield*/, e.open(url
                            .pathToFileURL(path.join(utils_1.TEST_FIXTURE_SRC_DIRECTORY, "mod-a-import.pc"))
                            .toString())];
                case 1:
                    result = _a.sent();
                    (0, chai_1.expect)((0, utils_1.stringifyLoadResult)(result).replace(/ class=".*?"/g, "")).to.eql("<style></style><div> Some Module <div> from test.pc </div></div>");
                    return [2 /*return*/];
            }
        });
    }); });
    it("can resolve a pc file from a nested module", function () { return __awaiter(void 0, void 0, void 0, function () {
        var e, result;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    e = (0, node_1.createEngineDelegate)();
                    return [4 /*yield*/, e.open(url
                            .pathToFileURL(path.join(utils_1.TEST_FIXTURE_SRC_DIRECTORY, "nested-mod-import.pc"))
                            .toString())];
                case 1:
                    result = _a.sent();
                    (0, chai_1.expect)((0, utils_1.stringifyLoadResult)(result).replace(/ class=".*?"/g, "")).to.eql("<style></style><div> Some Module <div> from test.pc </div></div>");
                    return [2 /*return*/];
            }
        });
    }); });
});
